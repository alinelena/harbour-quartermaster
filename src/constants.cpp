#include "constants.h"

const QString ApiKey::KEY_ACCESS_TOKEN                  = QStringLiteral("access_token");
const QString ApiKey::KEY_APP_ID                        = QStringLiteral("app_id");
const QString ApiKey::KEY_APP_NAME                      = QStringLiteral("app_name");
const QString ApiKey::KEY_APP_VERSION                   = QStringLiteral("app_version");
const QString ApiKey::KEY_ATTRIBUTES                    = QStringLiteral("attributes");
const QString ApiKey::KEY_AUTH                          = QStringLiteral("auth");
const QString ApiKey::KEY_AUTH_OK                       = QStringLiteral("auth_ok");
const QString ApiKey::KEY_AUTH_REQUIRED                 = QStringLiteral("auth_required");
const QString ApiKey::KEY_BATTERY                       = QStringLiteral("battery");
const QString ApiKey::KEY_BATTERY_CHARGING              = QStringLiteral("battery_charging");
const QString ApiKey::KEY_BATTERY_STATE                 = QStringLiteral("battery_state");
const QString ApiKey::KEY_BINARY_SENSOR                 = QStringLiteral("binary_sensor");
const QString ApiKey::KEY_CALL_SERVICE                  = QStringLiteral("call_service");
const QString ApiKey::KEY_CLOUDHOOK_URL                 = QStringLiteral("cloudhook_url");
const QString ApiKey::KEY_COMPONENTS                    = QStringLiteral("components");
const QString ApiKey::KEY_CONTEXT                       = QStringLiteral("context");
const QString ApiKey::KEY_DATA                          = QStringLiteral("data");
const QString ApiKey::KEY_DEVICE_CLASS                  = QStringLiteral("device_class");
const QString ApiKey::KEY_DEVICE_ID                     = QStringLiteral("device_id");
const QString ApiKey::KEY_DEVICE_NAME                   = QStringLiteral("device_name");
const QString ApiKey::KEY_DOMAIN                        = QStringLiteral("domain");
const QString ApiKey::KEY_ENCRYPTED                     = QStringLiteral("encrypted");
const QString ApiKey::KEY_ENTITY_ID                     = QStringLiteral("entity_id");
const QString ApiKey::KEY_ERRORS                        = QStringLiteral("errors");
const QString ApiKey::KEY_EXTERNAL_URL                  = QStringLiteral("external_url");
const QString ApiKey::KEY_EVENT                         = QStringLiteral("event");
const QString ApiKey::KEY_EVENT_TYPE                    = QStringLiteral("event_type");
const QString ApiKey::KEY_FRIENDLY_NAME                 = QStringLiteral("friendly_name");
const QString ApiKey::KEY_ICON                          = QStringLiteral("icon");
const QString ApiKey::KEY_ID                            = QStringLiteral("id");
const QString ApiKey::KEY_INTERNAL_URL                  = QStringLiteral("internal_url");
const QString ApiKey::KEY_INVALID                       = QStringLiteral("invalid");
const QString ApiKey::KEY_LATITUDE                      = QStringLiteral("latitude");
const QString ApiKey::KEY_LENGTH                        = QStringLiteral("length");
const QString ApiKey::KEY_LOCATION_NAME                 = QStringLiteral("location_name");
const QString ApiKey::KEY_LONGITUDE                     = QStringLiteral("longitude");
const QString ApiKey::KEY_MANUFACTURER                  = QStringLiteral("manufacturer");
const QString ApiKey::KEY_MASS                          = QStringLiteral("mass");
const QString ApiKey::KEY_MESSAGE                       = QStringLiteral("message");
const QString ApiKey::KEY_MODEL                         = QStringLiteral("model");
const QString ApiKey::KEY_NAME                          = QStringLiteral("name");
const QString ApiKey::KEY_NEW_STATE                     = QStringLiteral("new_state");
const QString ApiKey::KEY_NEWEST_VERSION                = QStringLiteral("newest_version");
const QString ApiKey::KEY_NOTIFY                        = QStringLiteral("notify");
const QString ApiKey::KEY_OS_NAME                       = QStringLiteral("os_name");
const QString ApiKey::KEY_OS_VERSION                    = QStringLiteral("os_version");
const QString ApiKey::KEY_PRESSURE                      = QStringLiteral("pressure");
const QString ApiKey::KEY_RADIUS                        = QStringLiteral("radius");
const QString ApiKey::KEY_REMOTE_UI_URL                 = QStringLiteral("remote_ui_url");
const QString ApiKey::KEY_RESULT                        = QStringLiteral("result");
const QString ApiKey::KEY_SECRET                        = QStringLiteral("secret");
const QString ApiKey::KEY_SENSOR                        = QStringLiteral("sensor");
const QString ApiKey::KEY_SERVICE                       = QStringLiteral("service");
const QString ApiKey::KEY_SERVICE_DATA                  = QStringLiteral("service_data");
const QString ApiKey::KEY_STATE                         = QStringLiteral("state");
const QString ApiKey::KEY_STATE_CHANGED                 = QStringLiteral("state_changed");
const QString ApiKey::KEY_SUBSCRIBE_EVENTS              = QStringLiteral("subscribe_events");
const QString ApiKey::KEY_SUBSCRIPTION                  = QStringLiteral("subscription");
const QString ApiKey::KEY_SUPPORTED_FEATURES            = QStringLiteral("supported_features");
const QString ApiKey::KEY_SUPPORTS_ENCRYPTION           = QStringLiteral("supports_encryption");
const QString ApiKey::KEY_TEMPERATURE                   = QStringLiteral("temperature");
const QString ApiKey::KEY_TYPE                          = QStringLiteral("type");
const QString ApiKey::KEY_UNIQUE_ID                     = QStringLiteral("unique_id");
const QString ApiKey::KEY_UNIT_OF_MEASUREMENT           = QStringLiteral("unit_of_measurement");
const QString ApiKey::KEY_UNIT_SYSTEM                   = QStringLiteral("unit_system");
const QString ApiKey::KEY_UNSUBSCRIBE_EVENTS            = QStringLiteral("unsubscribe_events");
const QString ApiKey::KEY_VALID                         = QStringLiteral("valid");
const QString ApiKey::KEY_VOLUME                        = QStringLiteral("volume");
const QString ApiKey::KEY_VERSION                       = QStringLiteral("version");
const QString ApiKey::KEY_WEBHOOK_ID                    = QStringLiteral("webhook_id");
const QString ApiKey::KEY_WHEN                          = QStringLiteral("when");
